pipeline {
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '5', daysToKeepStr: '5', numToKeepStr: '5')
    }
    agent {
        kubernetes {
            label 'jenkins-agent'
            yaml '''
apiVersion: v1
kind: Pod
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: bitnami/kubectl:latest
    command: ["cat"]
    tty: true
    resources:
      requests:
        memory: "50Mi"
        cpu: "150m"
      limits:
        memory: "50Mi"
        cpu: "150m"
  - name: cli
    image: caladreas/cbcore-cli:latest
    imagePullPolicy: Always
    command:
    - cat
    resources:
      requests:
        memory: "50Mi"
        cpu: "150m"
      limits:
        memory: "50Mi"
        cpu: "150m"
  - name: yq
    image: mikefarah/yq
    command: ['cat']
    tty: true
    resources:
      requests:
        memory: "50Mi"
        cpu: "150m"
      limits:
        memory: "50Mi"
        cpu: "150m"
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
            '''
        }
    }
    environment {
        TEAM_BASE_NAME      = ''
        NAMESPACE_TO_CREATE = ''
        CREDS               = credentials('jenkins-api')
        CLI                 = "java -jar /usr/bin/jenkins-cli.jar -noKeyAuth -s http://cjoc/cjoc -auth"
    }
    stages {
        stage('Team Details') {
            input {
                message "Please enter a team name (short, no spaces, all lower case)"
                ok "This is the name, yes."
                parameters {
                    string(name: 'TEAM_NAME', defaultValue: 'hex', description: 'Please specify a team name')
                }
            }
            steps {
                echo "TEAM_NAME=${TEAM_NAME}"
                script {
                    TEAM_BASE_NAME = "${TEAM_NAME}"
                    NAMESPACE_TO_CREATE = "cb-teams-${TEAM_NAME}"
                }
            }
        }
        stage('Create Namespace') {
            environment {
                BASE = 'resources/namespace-creation/kustomize'
                RECORD_LOC = 'teams/team-example'
            }
            steps {
                git 'https://github.com/joostvdg/cb-team-gitops.git'
                container('yq') {
                    sh 'yq w -i ${BASE}/base/namespace.yaml metadata.name ${NAMESPACE_TO_CREATE}'
                    sh 'yq w -i ${BASE}/team-example/kustomization.yaml namespace ${NAMESPACE_TO_CREATE}'
                }
                container('kubectl') {
                    sh '''
                        mkdir -p ${RECORD_LOC}
                        kubectl kustomize ${BASE}/team-example > ${RECORD_LOC}/team.yaml
                        cat ${RECORD_LOC}/team.yaml
                        kubectl apply -f ${RECORD_LOC}/team.yaml
                    '''
                }
            }
        }
        stage('Change OC Namespace') {
            steps {
                container('cli') {
                    sh '${CLI} ${CREDS} cboc groovy = < configure-oc-namespace.groovy ${NAMESPACE_TO_CREATE}'
                }
            }
        }
        stage('Create Team Master') {
            steps {
                container('cli') {
                    sh '${CLI} ${CREDS} teams ${TEAM_BASE_NAME} --put < teams/team-hex.json'
                }
            }
        }
        stage('Change OC Namespace') {
            steps {
                container('cli') {
                    sh '${CLI} ${CREDS} cboc groovy = < configure-oc-namespace.groovy jx-production'
                }
            }
        }
    }
}